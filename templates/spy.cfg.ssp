<%@ val dingEnable : Int %>
<%@ val dingVolume : Double %>
<%@ val graphicsConfig : String %>
<%@ val networkConfig : String %>
<%@ val movementLeft : String %>
<%@ val movementRight : String %>
<%@ val movementFwd : String %>
<%@ val movementBack : String %>
<%@ val fov : Int %>
<%@ val autoreload : Int %>
<%@ val fastswitch : Int %>
<%@ val damagenumbers : Int %>
<%@ val duck : String %>
<%@ val reloadhud : String %>
<%@ val suicide : String %>
<%@ val screenshot : String %>
<%@ val saveReplay : String %>
<%@ val quickSwitch : String %>
<%@ val teamOnlyTalk : String %>
<%@ val normalTalk : String %>
<%@ val scoreboardNetgraph : Int %>
<%@ val medic : String %>
<%@ val actionSlot : String %>
<%@ val taunt : String %>
<%@ val dropItem : String %>
<%@ val inspect : String %>
<%@ val say : String %>
<%@ val teamSay : String %>
<%@ val scoreboard : String %>
<%@ val primAttack : String %>
<%@ val secAttack : String %>
<%@ val backpack : String %>
<%@ val switchClass : String %>
<%@ val switchTeam : String %>
<%@ val console : String %>
<%@ val voiceMenu1 : String %>
<%@ val voiceMenu2 : String %>
<%@ val voiceMenu3 : String %>
<%@ val directWeapon1 : String %>
<%@ val directWeapon2 : String %>
<%@ val directWeapon3 : String %>
<%@ val directWeapon4 : String %>
<%@ val weaponShow : List[Boolean] %>
<%@ val hideTracers : Boolean %>
<%@ val weaponColors : List[(Int,Int,Int)] %>
<%@ val weaponCrosshairs : List[String] %>
<%@ val weaponScales : List[Int] %>
<%@ val weaponShow : List[Boolean] %>
<%@ val primSecSwap : String %>
<%@ val meleeSwap : String %>
<%@ val jump : String %>
<%@ val normalJump : String %>
<%@ val viewmodelFov : Int %>
<%@ val sensitivity : Double %>
<%@ val dingPitchMax : Int %>
<%@ val dingPitchMin : Int %>
<%@ val showHealBeam : Boolean %>
<%@ val autocallThreshold : Int %>
<%@ val medicRadar : String %>
<%@ val fakeUber : String %>
<%@ val secAttack : String %>
<%@ val uberPopChat : Boolean %>
<%@ val crouchJumpNotFor : List[String] %>
<%@ val currentConfig : String %>
<%@ val disguiseCycle : String %>
<%@ val disguiseCycleClasses : List[Int] %>
<%@ val disguiseFriendlyCycle : String %>
<%@ val disguiseFriendlyCycleClasses : List[Int] %>
<%@ val disguiseLast : String %>                       
<%@ val disguiseScout : String %>
<%@ val disguiseSoldier : String %>
<%@ val disguisePyro : String %>
<%@ val disguiseDemo : String %>
<%@ val disguiseHeavy : String %>
<%@ val disguiseEngineer : String %>
<%@ val disguiseMedic : String %>
<%@ val disguiseSniper : String %>
<%@ val disguiseSpy : String %>
<%@ val disguiseFriendlyScout : String %>
<%@ val disguiseFriendlySoldier : String %>
<%@ val disguiseFriendlyPyro : String %>
<%@ val disguiseFriendlyDemo : String %>
<%@ val disguiseFriendlyHeavy : String %>
<%@ val disguiseFriendlyEngineer : String %>
<%@ val disguiseFriendlyMedic : String %>
<%@ val disguiseFriendlySniper : String %>
<%@ val disguiseFriendlySpy : String %>
<%@ val showFlames : Boolean %>
<%@ val buildSentry : String %>
<%@ val buildDispenser : String %>
<%@ val buildEntrance : String %>
<%@ val buildExit : String %>
<%@ val zoomSensitivity : Double %>
<%@ val fullChargeBell : Int %>
<%@ val noCrossHairZoom : Int %>
<%@ val enableCrouchJump : Boolean %>
<%@ val classWeaponColors : Map[String, List[(Int, Int, Int)]] %>
<%@ val classWeaponCrosshairs : Map[String, List[String]] %>
<%@ val classWeaponScales : Map[String, List[Int]] %>
<%@ val classWeaponShow : Map[String, List[Boolean]] %>
<%@ val classSpecificEnabled : Map[String, Boolean] %>
<%@ val classSensitivity : Map[String, List[Double]] %>
<%@ val classDingPitchMax : Map[String, List[Int]] %>
<%@ val classDingPitchMin : Map[String, List[Int]] %>
<%@ val classDingVolume : Map[String, List[Double]] %>
<%@ val precEnabled : Boolean %>
<%@ val precLog : Int %>
<%@ val precScreens : Int %>
<%@ val precDeleteUseless : Int %>
<%@ val precMinStreak : Int %>
<%@ val precKillDelay : Int %>
<%@ val precDir : String %>
<%@ val precMode : Int %>
<%@ val precMark : String %>
<%@ val zoom : String %>
<%@ val zoomFactor : Double %>
<%@ val unbindList : List[String] %>
<%@ val destroySentry : String %>
<%@ val destroyDispenser : String %>
<%@ val destroyEntrance : String %>
<%@ val destroyExit : String %>
<%@ val spray : String %>
<%@ val requestAccept : String %>
<%@ val requestDecline : String %>
<%@ val switchBadnet : String %>
<%@ val switchGoodnet : String %>
<%@ val switchLannet : String %>
<%@ val disguiseMenuToggle : String %>
<%@ val enableSpecTournamentMode : Int %>
<%@ val enableRagdolls : Boolean %>
<%@ val enableSprays : Boolean %>
<%@ val enableGibs : Boolean %>
<%@ val previousWeapon : String %>
<%@ val nextInvWeapon : String %>
<%@ val prevInvWeapon : String %>
<%@ val startSpawnSwitch : String %>
<%@ val finishSpawnSwitch : String %>

#import(yatf2configgenerator.ConfigRender._)

exec reset

alias start_spawn_switch "alias finish_spawn_switch "join_class <%= currentConfig %>"; join_class random"

#if (crouchJumpNotFor.contains(currentConfig))
<%= bindif(jump, "+jump") %>
#else
//<%= bindif(jump, "+jump") %>
#end

//class specific crosshairs and weapon visibility and sensitivity
#if(classSpecificEnabled(currentConfig))
#for (slot <- 1 to 3)
alias cross_<%= slot %> "cl_crosshair_red <%= classWeaponColors(currentConfig)(slot - 1)._1 %>; cl_crosshair_green <%= classWeaponColors(currentConfig)(slot - 1)._2 %>; cl_crosshair_blue <%= classWeaponColors(currentConfig)(slot - 1)._3 %>; cl_crosshair_scale <%= classWeaponScales(currentConfig)(slot - 1) %>; cl_crosshair_file <%= classWeaponCrosshairs(currentConfig)(slot - 1) %>"
alias weap_sens_<%= slot %> "sensitivity <%= classSensitivity(currentConfig)(slot - 1).toString %>"
alias weap_ding_<%= slot %> "tf_dingaling_pitchmaxdmg <%= classDingPitchMax(currentConfig)(slot - 1) %>; tf_dingaling_pitchmindmg <%= classDingPitchMin(currentConfig)(slot - 1) %>; tf_dingaling_volume <%= classDingVolume(currentConfig)(slot - 1).toString %>"
alias weap_zoom_sens_<%= slot %> "sensitivity <%= (classSensitivity(currentConfig)(slot - 1) / zoomFactor).toString %>"
<%= if(classWeaponShow(currentConfig)(slot - 1)) { //stupid ssp limitations wrt nested ifs force me to do this
"alias weap_vis_" + slot + " show_weapon"
} else {
"alias weap_vis_" + slot + " hide_weapon"
} %>
#end
#else
#for (slot <- 1 to 3)
//alias cross_<%= slot %> "cl_crosshair_red <%= weaponColors(slot - 1)._1 %>; cl_crosshair_green <%= weaponColors(slot - 1)._2 %>; cl_crosshair_blue <%= weaponColors(slot - 1)._3 %>; cl_crosshair_scale <%= weaponScales(slot - 1) %>; cl_crosshair_file <%= weaponCrosshairs(slot - 1) %>"
//alias weap_sens_<%= slot %> "sensitivity <%= sensitivity.toString %>"
//alias weap_zoom_sens_<%= slot %> "sensitivity <%= (sensitivity / zoomFactor).toString %>"
//alias weap_ding_<%= slot %> "tf_dingaling_pitchmaxdmg <%= dingPitchMax %>; tf_dingaling_pitchmindmg <%= dingPitchMin %>; tf_dingaling_volume <%= dingVolume.toString %>"
<%= if(weaponShow(slot - 1)) { //stupid ssp limitations wrt nested ifs force me to do this
"//alias weap_vis_" + slot + " show_weapon"
} else {
"//alias weap_vis_" + slot + " hide_weapon"
} %>
#end
#end

// cycle disguise
alias disguise_cycle 	"disguise1"
#for (disguise <- 1 to disguiseCycleClasses.size)
#if (disguise == disguiseCycleClasses.size)
alias disguise<%= disguise %> "disguise <%= disguiseCycleClasses(disguise - 1) %> -1; alias disguise_cycle disguise1"
#else
alias disguise<%= disguise %> "disguise <%= disguiseCycleClasses(disguise - 1) %> -1; alias disguise_cycle disguise<%= disguise + 1 %>"
#end
#end

alias disguise_cycle_f 	"disguise1_f"
#for (disguise <- 1 to disguiseFriendlyCycleClasses.size)
#if (disguise == disguiseFriendlyCycleClasses.size)
alias disguise<%= disguise %>_f "disguise <%= disguiseFriendlyCycleClasses(disguise - 1) %> -2; alias disguise_cycle_f disguise1_f"
#else
alias disguise<%= disguise %>_f "disguise <%= disguiseFriendlyCycleClasses(disguise - 1) %> -2; alias disguise_cycle_f disguise<%= disguise + 1 %>_f"
#end
#end

//binds
<%= bindif(disguiseMenuToggle, "disguiseteam") %>
<%= bindif(disguiseScout, "\"disguise 1 -1\"") %>
<%= bindif(disguiseSoldier, "\"disguise 3 -1\"") %>
<%= bindif(disguisePyro, "\"disguise 7 -1\"") %>
<%= bindif(disguiseDemo, "\"disguise 4 -1\"") %>
<%= bindif(disguiseHeavy, "\"disguise 6 -1\"") %>
<%= bindif(disguiseEngineer, "\"disguise 9 -1\"") %>
<%= bindif(disguiseMedic, "\"disguise 5 -1\"") %>
<%= bindif(disguiseSniper, "\"disguise 2 -1\"") %>
<%= bindif(disguiseSpy, "\"disguise 8 -1\"") %>
<%= bindif(disguiseFriendlyScout, "\"disguise 1 -2\"") %>
<%= bindif(disguiseFriendlySoldier, "\"disguise 3 -2\"") %>
<%= bindif(disguiseFriendlyPyro, "\"disguise 7 -2\"") %>
<%= bindif(disguiseFriendlyDemo, "\"disguise 4 -2\"") %>
<%= bindif(disguiseFriendlyHeavy, "\"disguise 6 -2\"") %>
<%= bindif(disguiseFriendlyEngineer, "\"disguise 9 -2\"") %>
<%= bindif(disguiseFriendlyMedic, "\"disguise 5 -2\"") %>
<%= bindif(disguiseFriendlySniper, "\"disguise 2 -2\"") %>
<%= bindif(disguiseFriendlySpy, "\"disguise 8 -2\"") %>
<%= bindif(disguiseCycle, "disguise_cycle") %>
<%= bindif(disguiseFriendlyCycle, "disguise_cycle_f") %>
<%= bindif(disguiseLast, "lastdisguise") %>
<%= bindif(secAttack, "\"+attack2; show_weapon\"") %> //when going invisible, show the weapon to show the invisibility status
<%= bindif(directWeapon4, "slot4") %>